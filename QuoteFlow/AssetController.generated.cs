// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace QuoteFlow.Controllers
{
    public partial class AssetController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AssetController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Show()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Show);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Edit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateAsset()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateAsset);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AssetController Actions { get { return MVC.Asset; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Asset";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Asset";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Show = "Show";
            public readonly string Edit = "Edit";
            public readonly string New = "New";
            public readonly string CreateAsset = "CreateAsset";
            public readonly string AddComment = "AddComment";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Show = "Show";
            public const string Edit = "Edit";
            public const string New = "New";
            public const string CreateAsset = "CreateAsset";
            public const string AddComment = "AddComment";
        }


        static readonly ActionParamsClass_Show s_params_Show = new ActionParamsClass_Show();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Show ShowParams { get { return s_params_Show; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Show
        {
            public readonly string assetId = "assetId";
            public readonly string assetName = "assetName";
        }
        static readonly ActionParamsClass_Edit s_params_Edit = new ActionParamsClass_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Edit EditParams { get { return s_params_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Edit
        {
            public readonly string assetId = "assetId";
            public readonly string assetName = "assetName";
            public readonly string form = "form";
            public readonly string returnUrl = "returnUrl";
        }
        static readonly ActionParamsClass_CreateAsset s_params_CreateAsset = new ActionParamsClass_CreateAsset();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateAsset CreateAssetParams { get { return s_params_CreateAsset; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateAsset
        {
            public readonly string catalogId = "catalogId";
            public readonly string catalogName = "catalogName";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddComment s_params_AddComment = new ActionParamsClass_AddComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddComment AddCommentParams { get { return s_params_AddComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddComment
        {
            public readonly string model = "model";
            public readonly string assetId = "assetId";
            public readonly string assetName = "assetName";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Edit = "Edit";
                public readonly string Index = "Index";
                public readonly string New = "New";
                public readonly string Show = "Show";
            }
            public readonly string Edit = "~/Views/Asset/Edit.cshtml";
            public readonly string Index = "~/Views/Asset/Index.cshtml";
            public readonly string New = "~/Views/Asset/New.cshtml";
            public readonly string Show = "~/Views/Asset/Show.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AssetController : QuoteFlow.Controllers.AssetController
    {
        public T4MVC_AssetController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ShowOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int assetId, string assetName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Show(int assetId, string assetName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Show);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assetId", assetId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assetName", assetName);
            ShowOverride(callInfo, assetId, assetName);
            return callInfo;
        }

        [NonAction]
        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int assetId, string assetName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Edit(int assetId, string assetName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assetId", assetId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assetName", assetName);
            EditOverride(callInfo, assetId, assetName);
            return callInfo;
        }

        [NonAction]
        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int assetId, string assetName, QuoteFlow.Models.ViewModels.Assets.EditAssetRequest form, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Edit(int assetId, string assetName, QuoteFlow.Models.ViewModels.Assets.EditAssetRequest form, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assetId", assetId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assetName", assetName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            EditOverride(callInfo, assetId, assetName, form, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void NewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult New()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.New);
            NewOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateAssetOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int catalogId, string catalogName, QuoteFlow.Models.ViewModels.NewAssetModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateAsset(int catalogId, string catalogName, QuoteFlow.Models.ViewModels.NewAssetModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateAsset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "catalogId", catalogId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "catalogName", catalogName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CreateAssetOverride(callInfo, catalogId, catalogName, model);
            return callInfo;
        }

        [NonAction]
        partial void AddCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, QuoteFlow.Models.ViewModels.Assets.NewAssetCommentViewModel model, int assetId, string assetName);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddComment(QuoteFlow.Models.ViewModels.Assets.NewAssetCommentViewModel model, int assetId, string assetName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assetId", assetId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assetName", assetName);
            AddCommentOverride(callInfo, model, assetId, assetName);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
