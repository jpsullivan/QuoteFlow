@using Jil
@using QuoteFlow.Html
@using QuoteFlow.Infrastructure.Extensions
@using StackExchange.Profiling
@model QuoteFlow.Api.Models.ViewModels.Quotes.QuoteBuilderViewModel

@{
    var bodyClass = "page-type-navigator";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width"/>
    <title>@ViewBag.Title</title>

    <link rel="stylesheet" href="@Url.Content("~/Content/css/lib/aui/aui.min.css")" media="all">
    <link rel="stylesheet" href="@Url.Content("~/Content/css/lib/aui/aui-experimental.min.css")" media="all">
    @Html.RenderCssBundle("app.css", BundleOptions.BuildConfigDependent)
</head>
<body class="aui-layout ajax-issue-search-and-view @bodyClass">
<div id="page">
    @(User.Identity.IsAuthenticated ? Html.Partial("_AuthenticatedHeader") : Html.Partial("_UnauthenticatedHeader"))

    <section id="content" role="main">
        <div class="navigator-container">
            <div class="navigator-sidebar" id="navigator_sidebar"></div>
            <div class="navigator-body">
                <div class="contained-content">
                    <header class="saved-search-selector">
                        <div class="saved-search-operations">
                            <ul class="operations">
                                <li class="aui-dd-parent"><a href="#" class="header-views header-operations aui-dropdown-trigger aui-dd-link" role="button" original-title="Export this filter in another format"><span>Export</span></a></li>
                                <li class="aui-dd-parent"><a href="#" class="header-tools header-operations aui-dropdown-trigger aui-dd-link" role="button" original-title="Select operations that can be completed"><span>Tools</span></a></li>
                            </ul>
                        </div>
                        <div id="search-header-view">
                            <div class="header-section-primary">
                                <h1 class="search-title" title="Search">@Model.Quote.Name</h1>
                                <ul class="filter-operations">
                                    <li><a href="@Url.NewAsset()" class="aui-button aui-button-light" title="">Create new asset</a></li>
                                </ul>
                            </div>
                        </div>
                    </header>

                    <form class="navigator-search"></form>

                    <div class="navigator-group">
                        <div class="results-panel navigator-item">
                            <div class="navigator-content"
                                 data-issue-table-model-state="@JSON.Serialize(Model.AssetTable)"
                                 data-session-search-state="{ 'id': 118780 '}"
                                 data-selected-issue="">
                                @Html.Partial("Partials/Quote/Builder/SplitView")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="issue-container"></div>

        @RenderBody()
    </section>

    @Html.Partial("_Footer")
</div>

<div id="jqlFieldz" style="display:none;"></div>
<div id="jqlFunctionNamez" style="display:none;"></div>
<div id="jqlReservedWordz" style="display:none;">@JSON.Serialize(Model.JqlReservedWords)</div>
<div id="criteriaJson" style="display:none;">@JSON.Serialize(Model.CriteriaJqlOutcome.ReturnedValue)</div>
<div id="systemFiltersJson" style="display:none;"></div>

<script>
    // set the global application vars
    window.rootUrl = '@Url.SiteRoot()';
    window.applicationPath = '@Context.Request.ApplicationPath.EnsureTrailingSlash()';
    @if (Request.IsAuthenticated)
    {
        <text>window.currentOrganization = '@CurrentOrganization.Id.ToString()';</text>
        <text>window.currentUser = @ViewHelpers.JsEncode(CurrentUser);</text>
    }
</script>

<script type="text/javascript" src="@Url.Content("~/Content/js/lib/handlebars.min.js")"></script>
@Html.RenderJsBundle("templates.js", BundleOptions.MinifiedAndCombined)
@RenderSection("scripts", false)
@RenderSection("bootstrap", false)
@Html.RenderJsBundle("bundle.js", BundleOptions.BuildConfigDependent)
@RenderSection("secondaryScripts", false)

@MiniProfiler.RenderIncludes()
</body>
</html>
