@using QuoteFlow.Infrastructure.Extensions
@model QuoteFlow.Models.ViewModels.Assets.EditAssetRequest

@{
    Layout = "../Shared/_FocusedLayout.cshtml";
    ViewBag.Title = "Edit " + Model.Name + " - QuoteFlow";
}

<h2>Edit Asset</h2>
@using (Html.BeginForm("Edit", "Asset", FormMethod.Post, new { id="EditForm", @class = "aui" }))
{
    @Html.AntiForgeryToken()

    <fieldset>
        <div class="field-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { @class = "text" })
            <div class="error">@Html.ValidationMessageFor(m => m.Name)</div>
        </div>
        <div class="field-group">
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, new { @class = "textarea long-field" })
        </div>
        <div class="field-group">
            @Html.LabelFor(m => m.SKU)
            @Html.TextBoxFor(m => m.SKU, new { @class = "text" })
        </div>
        <div class="field-group">
            @Html.LabelFor(m => m.Cost)
            @Html.TextBoxFor(m => m.Cost, new { @class = "text" })
        </div>
        <div class="field-group">
            @Html.LabelFor(m => m.Markup)
            @Html.TextBoxFor(m => m.Markup, new { @class = "text" })
        </div>

        <div class="field-group">
            @Html.LabelFor(m => m.ManufacturerId)
            @Html.DropDownListFor(m => m.ManufacturerId, Model.Manufacturers, "Choose a manufacturer", new { @class = "select long-field" })
        </div>
        
        <h3>Asset Vars <button class="aui-button aui-button-compact">Add Asset Var</button></h3>
        
        @foreach (var assetVar in Model.AssetVars) {
            <div class="field-group">
                <label style="padding: 0;">
                    @foreach (var name in Model.AssetVarNames.Where(name => name.Text == assetVar.Name)) {
                        name.Selected = true;
                    }
                    @Html.DropDownList("AssetVarName", Model.AssetVarNames, new { @class = "select long-field" })
                </label>
                @Html.TextBox("TextboxAssetVarThingy", assetVar.Value.VarValue, new { @class = "text" })
            </div>
        }
    </fieldset>

    <div class="buttons-container">
        <div class="buttons">
            <input class="aui-button aui-button-primary" type="submit" id="submit" name="submit" value="Update asset">
            <a id="cancel" class="aui-button aui-button-link" name="cancel" accesskey="c" href="@Url.Asset(Model.Id, Model.Name)">Cancel</a>
        </div>
    </div>
}

@section secondaryScripts {
    <script type="text/javascript">
//        // for returnUrl functionality
//        var origin = window.location.protocol + "//" + window.location.host;
//        var returnUrl = href.substr(origin.length);
//        $(document.forms.EditForm).append($('<input type="hidden" name="returnUrl" value="' + returnUrl + '">'));
//        document.forms.EditForm.submit();

        AJS.$(document).ready(function() {
            AJS.$('select').auiSelect2();
        });
    </script>
}