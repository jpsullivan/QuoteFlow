@using QuoteFlow.Infrastructure.Extensions
@model QuoteFlow.Models.ViewModels.Assets.EditAssetRequest

@{
    Layout = "../Shared/_FocusedLayout.cshtml";
    ViewBag.Title = "Edit " + Model.Name + " - QuoteFlow";
}

<h2>Edit Asset</h2>
@using (Html.BeginForm("Edit", "Asset", FormMethod.Post, new { id = "EditForm", @class = "aui" }))
{
    @Html.AntiForgeryToken()

    <fieldset>
        <div class="field-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { @class = "text long-field" })
            <div class="error">@Html.ValidationMessageFor(m => m.Name)</div>
        </div>
        <div class="field-group">
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, new { @class = "textarea long-field" })
        </div>
        <div class="field-group">
            @Html.LabelFor(m => m.SKU)
            @Html.TextBoxFor(m => m.SKU, new { @class = "text long-field" })
        </div>
        <div class="field-group">
            @Html.LabelFor(m => m.Cost)
            @Html.TextBoxFor(m => m.Cost, new { @class = "text long-field" })
        </div>
        <div class="field-group">
            @Html.LabelFor(m => m.Markup)
            @Html.TextBoxFor(m => m.Markup, new { @class = "text long-field" })
        </div>

        <div class="field-group">
            @Html.LabelFor(m => m.ManufacturerId)
            @Html.DropDownListFor(m => m.ManufacturerId, Model.Manufacturers, "Choose a manufacturer", new { @class = "select long-field" })
        </div>

        <h3 style="margin-bottom: 10px;">Asset Vars <button id="add_asset_var" class="aui-button aui-button-compact">Add Asset Var</button></h3>
        
        <div id="asset_var_fields">
            @foreach (var assetVar in Model.AssetVars)
            {
                <div class="field-group">
                    <label style="padding: 0;">
                        @foreach (var name in Model.AssetVarNames.Where(name => name.Text == assetVar.Name))
                        {
                            name.Selected = true;
                        }
                        @Html.DropDownList(string.Format("AssetVarName_{0}", assetVar.Id.ToString()), Model.AssetVarNames, new { @class = "select long-field" })
                    </label>
                    @Html.TextBox(string.Format("AssetVarValue_{0}", assetVar.Id.ToString()), assetVar.Value.VarValue, new { @class = "text" })

                    @{ var buttonOwns = string.Format("assetvar_{0}", assetVar.Id.ToString()); }
                    <button aria-owns="@buttonOwns" aria-haspopup="true" class="aui-button aui-button-subtle aui-dropdown2-trigger aui-dropdown2-trigger-arrowless">
                        <span class="aui-icon aui-icon-small aui-iconfont-more">More</span>
                    </button>
                    <div id="@buttonOwns" class="aui-dropdown2 aui-style-default" aria-hidden="false" data-dropdown2-alignment="right">
                        <ul class="aui-list-truncate">
                            <li>
                                <a href="#" class="remove"><span class="aui-icon aui-icon-small aui-iconfont-remove-label"></span> Remove</a>
                            </li>
                        </ul>
                    </div>
                </div>
            }
        </div>
    </fieldset>

    <div class="buttons-container">
        <div class="buttons">
            <input class="aui-button aui-button-primary" type="submit" id="submit" name="submit" value="Update asset">
            <a id="cancel" class="aui-button aui-button-link" name="cancel" accesskey="c" href="@Url.Asset(Model.Id, Model.Name)">Cancel</a>
        </div>
    </div>

    <div id="asset_var_selection_container"></div>
}

@section secondaryScripts {
    <script type="text/javascript">
        //        // for returnUrl functionality
        //        var origin = window.location.protocol + "//" + window.location.host;
        //        var returnUrl = href.substr(origin.length);
        //        $(document.forms.EditForm).append($('<input type="hidden" name="returnUrl" value="' + returnUrl + '">'));
        //        document.forms.EditForm.submit();

        var view = new QuoteFlow.UI.Asset.EditAsset({
            assetVarNames: @ViewHelpers.JsEncode(Model.AssetVarNames)
        });

        AJS.$(document).ready(function () {
            AJS.$('select').auiSelect2();
        });
    </script>
}